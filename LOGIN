<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Meu Perfil • Config</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Inter+Tight:wght@600&display=swap" rel="stylesheet">
  <style>
    :root{
      --bg: #0b0d10;                /* page background */
      --card: #12151a;              /* secondaryBackground */
      --primary-text: #e6e6e6;      /* primary text (also header bg in original) */
      --muted: #9aa3af;             /* subtler text */
      --accent: #7c5cff;            /* tertiary */
      --alt: #ffffff;               /* alternate (light text on dark header) */
      --shadow: 0 6px 20px rgba(0,0,0,.35);
      --radius: 14px;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, "Apple Color Emoji","Segoe UI Emoji";
      background: radial-gradient(1200px 800px at 10% 0%, #151924, transparent 60%),
                  radial-gradient(1200px 800px at 90% 100%, #131a21, transparent 60%),
                  var(--bg);
      color: var(--primary-text);
      display:grid; place-items:center;
    }
    .card{
      width: min(400px, 92vw);
      height: 550px;
      background: var(--card);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      position: relative;
      overflow: hidden;
      display:flex; flex-direction:column;
    }
    .header{
      height: 80px; flex:0 0 auto;
      background: linear-gradient(180deg, #1b2030 0%, #0f131c 100%);
      border-bottom: 1px solid rgba(255,255,255,.06);
      display:flex; align-items:center; justify-content:space-between;
      padding: 0 12px 0 20px; border-radius: 0 0 12px 12px;
    }
    .header h1{
      font: 600 20px/1 Inter, sans-serif; color: var(--alt); margin:0;
    }
    .icon-btn{
      display:inline-grid; place-items:center; width:36px; height:36px; border-radius:10px;
      background: rgba(255,255,255,.06); color: var(--alt); border: 1px solid rgba(255,255,255,.08);
      cursor:pointer; transition: .2s transform, .2s opacity, .2s background;
    }
    .icon-btn:hover{ transform: translateY(-1px); background: rgba(255,255,255,.12); }
    .content{ flex:1 1 auto; padding: 10px; overflow:auto; }
    .panel{ background: #0f1319; border: 1px solid rgba(255,255,255,.06); border-radius: 12px; padding: 14px 12px; }
    .label{ font-weight:600; letter-spacing:.5px; font-size: 13px; color:#cbd5e1; margin: 6px 0 4px; }
    .value{ font-weight:600; font-size:16px; margin: 0 0 18px; }
    .avatar-wrap{ display:grid; place-items:center; margin: 6px 0 12px; }
    .avatar{ width:135px; height:135px; border-radius: 50%; overflow:hidden; border: 2px solid rgba(255,255,255,.1);
      display:grid; place-items:center; background: #0d1117; }
    .avatar img{ width:100%; height:100%; object-fit: cover; }
    .upload{
      display:inline-flex; align-items:center; gap:8px; padding: 10px 12px; border-radius: 10px; border: 1px solid rgba(255,255,255,.08);
      background: var(--accent); color:#fff; font: 600 12px/1 Inter Tight, Inter, sans-serif; cursor:pointer; box-shadow: 0 6px 24px rgba(124,92,255,.28);
    }
    .footer{
      flex:0 0 auto; padding: 10px; display:flex; gap:10px;
    }
    .btn{ 
      width:100%; height: 40px; border-radius: 10px; border: 1px solid rgba(255,255,255,.06);
      background: var(--accent); color:#fff; font: 600 14px/1 Inter Tight, Inter, sans-serif; cursor:pointer;
      transition: .2s transform, .2s filter; box-shadow: 0 8px 28px rgba(124,92,255,.25);
    }
    .btn:hover{ transform: translateY(-1px); }

    /* Close (floating) */
    .close-fab{
      position:absolute; right:12px; top:10px; width:34px; height:34px; border-radius:10px;
      display:grid; place-items:center; color:#fff; background: rgba(255,255,255,.14); border: 1px solid rgba(255,255,255,.18);
      cursor:pointer; backdrop-filter: blur(8px);
    }
    .visually-hidden{ position:absolute !important; height:1px; width:1px; overflow:hidden; clip:rect(1px,1px,1px,1px); white-space:nowrap; }
    .toast{ position: fixed; inset: auto 50% 24px auto; transform: translateX(50%);
      background: #10151f; border:1px solid rgba(255,255,255,.08); color:#e6e6e6; padding:10px 14px; border-radius: 10px; box-shadow: var(--shadow);
      font: 500 13px/1.3 Inter, sans-serif; opacity: 0; pointer-events: none; transition: .25s ease; }
    .toast.show{ opacity: 1; }
  </style>
</head>
<body>
  <div class="card" role="dialog" aria-labelledby="title" aria-modal="true">
    <div class="header">
      <h1 id="title">Meu Perfil :</h1>
      <button class="icon-btn" id="headerClose" aria-label="Fechar">
        <!-- close icon -->
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <path d="M6 6l12 12M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
    </div>

    <button class="close-fab" id="fabClose" aria-label="Fechar">
      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
        <path d="M6 6l12 12M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>

    <main class="content">
      <section class="panel" aria-label="Formulário do perfil">
        <p class="label">NOME</p>
        <p class="value" id="nameValue">FELIPPE CARDOSO</p>

        <p class="label">EMAIL</p>
        <p class="value" id="emailValue">FELIPPEE.CARDOSO@GMAIL.COM</p>

        <p class="label">FOTO DE PERFIL</p>
        <div class="avatar-wrap">
          <div class="avatar" aria-live="polite">
            <img id="avatarImg" alt="Foto de perfil" src="https://images.unsplash.com/photo-1544723795-3fb6469f5b39?q=80&w=400&auto=format&fit=crop" />
          </div>
        </div>

        <div style="text-align:center">
          <label class="upload" for="avatarInput">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
              <path d="M12 16V4m0 0l-4 4m4-4l4 4M6 20h12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>upload foto</span>
          </label>
          <input id="avatarInput" class="visually-hidden" type="file" accept="image/*" />
        </div>
      </section>
    </main>

    <footer class="footer">
      <button class="btn" id="logoutBtn">Logout</button>
    </footer>
  </div>

  <div class="toast" id="toast" role="status" aria-live="polite"></div>

  <script>
    const qs = (s, el=document) => el.querySelector(s);
    const toast = qs('#toast');

    function showToast(msg){
      toast.textContent = msg; toast.classList.add('show');
      clearTimeout(showToast._t);
      showToast._t = setTimeout(()=> toast.classList.remove('show'), 1800);
    }

    // Close handlers (simula Navigator.pop)
    const card = qs('.card');
    const close = () => { card.style.transform = 'scale(.98) translateY(8px)'; card.style.opacity = '.0'; setTimeout(()=> card.remove(), 180); };
    qs('#headerClose').addEventListener('click', close);
    qs('#fabClose').addEventListener('click', close);

    // Upload avatar preview
    const avatarInput = qs('#avatarInput');
    const avatarImg = qs('#avatarImg');
    avatarInput.addEventListener('change', (e)=>{
      const file = e.target.files?.[0];
      if(!file) return;
      const url = URL.createObjectURL(file);
      avatarImg.src = url;
      showToast('Foto carregada com sucesso');
    });

    // Logout (placeholder)
    qs('#logoutBtn').addEventListener('click', ()=>{
      showToast('Logout efetuado');
      // Aqui você integraria com sua lógica real de sessão
    });

    // Optional: preenche valores via query params (?nome=...&email=...)
    const params = new URLSearchParams(location.search);
    const nome = params.get('nome');
    const email = params.get('email');
    if(nome) qs('#nameValue').textContent = nome;
    if(email) qs('#emailValue').textContent = email.toUpperCase();
  </script>
</body>
</html>
