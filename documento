<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>📄 Documentos necessários</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Inter+Tight:wght@600&display=swap" rel="stylesheet">
  <style>
    :root{
      --bg:#0d1117;           /* page background */
      --surface:#0f1623;      /* panel bg */
      --brand:#7c5cff;        /* accent */
      --text:#e6e6e6;         /* primary text */
      --muted:#b1b8cc;        /* secondary */
      --chip:#111827;         /* chip bg */
      --alt:#ffffff;          /* white */
      --shadow:0 14px 36px rgba(0,0,0,.35);
      --radius:16px;
      --device-w: 643.8px;    /* do Flutter */
      --device-h: 748.9px;    /* do Flutter */
    }
    *{box-sizing:border-box}
    html,body{height:100%; min-height:100vh}
    body{
      margin:0; background: radial-gradient(1200px 900px at 10% 0%, #141c2b 0%, transparent 60%),
                                 radial-gradient(1000px 800px at 100% 90%, #131a27 0%, transparent 55%),
                                 var(--bg);
      color: var(--text);
      font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial;
      display:grid; place-items:center; padding: 18px;
    }
    .device{ width:min(var(--device-w), 96vw); height:min(var(--device-h), 96vh); background:#1a2030; border-radius:26px; box-shadow:var(--shadow); overflow:hidden; display:flex; flex-direction:column }

    /* Header */
    .header{ background: var(--brand); color:#0b0d10; display:flex; align-items:center; justify-content:space-between; padding:14px 16px }
    .header h1{ margin:0; font: 700 20px/1.2 Inter Tight, Inter, sans-serif; color:#fff }
    .icon-btn{ width:36px; height:36px; display:grid; place-items:center; border-radius:10px; background: rgba(0,0,0,.2); border: 1px solid rgba(255,255,255,.25); cursor:pointer }
    .ico{ width:20px; height:20px; color:#fff }

    /* Content */
    .content{ flex:1; padding: 16px; overflow:auto; display:grid; grid-template-rows: auto 1fr auto; gap:16px }

    .card{ background: var(--surface); border:1px solid rgba(255,255,255,.08); border-radius: var(--radius); padding: 16px; box-shadow: 0 8px 24px rgba(0,0,0,.25) }
    .card h2{ margin: 0 0 10px; font: 700 18px/1.2 Inter Tight, Inter, sans-serif }
    .desc{ margin:0 0 12px; color: var(--muted) }

    /* Checklist */
    .list{ list-style:none; margin:0; padding:0; display:grid; gap:10px }
    .item{ display:flex; gap:10px; align-items:flex-start; background:#0e1522; border:1px solid rgba(255,255,255,.06); padding:10px 12px; border-radius:12px }
    .check{ flex:0 0 24px; width:24px; height:24px; display:grid; place-items:center; border-radius:8px; background:#10b981; color:#001; font-weight:700 }
    .item p{ margin:2px 0 0 }

    /* Actions */
    .actions{ display:flex; gap:10px; flex-wrap:wrap }
    .btn{ height:40px; display:inline-flex; align-items:center; justify-content:center; gap:8px; background:#111827; color:#fff; border:none; border-radius:10px; font: 600 14px/1 Inter Tight, Inter, sans-serif; padding: 0 14px; cursor:pointer; box-shadow: 0 10px 24px rgba(0,0,0,.2) }
    .btn.alt{ background:#fff; color:#111 }
    .btn.brand{ background: var(--brand); color:#fff }

    /* Upload dropzone */
    .drop{ margin-top: 6px; background: #0d1421; border: 1px dashed rgba(255,255,255,.25); border-radius:12px; padding:12px; display:grid; place-items:center; color: var(--muted); text-align:center }

    /* Toast */
    .toast{ position: fixed; inset: auto 50% 20px auto; transform: translateX(50%); background:#10151f; border:1px solid rgba(255,255,255,.08); color:#e6e6e6; padding:10px 14px; border-radius: 10px; box-shadow: var(--shadow); font: 500 13px/1.3 Inter, sans-serif; opacity:0; pointer-events:none; transition:.25s; z-index:60 }
    .toast.show{ opacity:1 }

    @media (max-height: 720px){
      .btn{ height:36px }
      .header h1{ font-size:18px }
    }
  </style>
</head>
<body>
  <div class="device">
    <div class="header">
      <h1>📄 Documentos necessários</h1>
      <button class="icon-btn" id="closeBtn" aria-label="Fechar">
        <svg class="ico" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 6l12 12M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/></svg>
      </button>
    </div>

    <main class="content">
      <section class="card">
        <h2>Checklist para análise</h2>
        <p class="desc">Separe os documentos para agilizar a aprovação:</p>
        <ul class="list">
          <li class="item"><span class="check">✓</span><p><b>Documento de identidade</b> (RG ou CNH)</p></li>
          <li class="item"><span class="check">✓</span><p><b>CPF</b></p></li>
          <li class="item"><span class="check">✓</span><p><b>Comprovante de renda</b> (holerite ou declaração)</p></li>
          <li class="item"><span class="check">✓</span><p><b>Fiador ou caução</b> (conforme contrato)</p></li>
          <li class="item"><span class="check">✓</span><p><b>Comprovante de residência</b></p></li>
        </ul>

        <div class="actions" style="margin-top:12px">
          <button class="btn brand" id="copyList">Copiar lista</button>
          <label class="btn" for="upDocs">Enviar arquivos</label>
          <input id="upDocs" type="file" multiple class="visually-hidden" style="position:absolute;left:-9999px"/>
          <button class="btn alt" id="downloadModelo">Baixar modelo de cadastro</button>
        </div>

        <div class="drop" id="drop">
          Arraste e solte os PDFs/JPGs aqui (ou use "Enviar arquivos").
        </div>
      </section>

      <section class="card">
        <h2>Dicas rápidas</h2>
        <ul class="list">
          <li class="item"><span class="check">•</span><p>Prefira <b>PDF</b> ou imagens legíveis (sem reflexo).</p></li>
          <li class="item"><span class="check">•</span><p>O tamanho ideal é até <b>10&nbsp;MB</b> por arquivo.</p></li>
          <li class="item"><span class="check">•</span><p>Apague dados sensíveis que não sejam necessários.</p></li>
        </ul>
      </section>
    </main>
  </div>

  <div class="toast" id="toast" role="status" aria-live="polite"></div>

  <script>
    const qs = (s, el=document)=> el.querySelector(s);

    // Close behavior
    qs('#closeBtn').addEventListener('click', ()=>{
      const dev = qs('.device');
      dev.style.transform = 'scale(.98) translateY(8px)';
      dev.style.opacity = '0';
      setTimeout(()=> dev.remove(), 180);
    });

    // Toast helper
    const toast = qs('#toast');
    function showToast(msg){ toast.textContent = msg; toast.classList.add('show'); clearTimeout(showToast._t); showToast._t = setTimeout(()=> toast.classList.remove('show'), 1600); }

    // Copy list
    qs('#copyList').addEventListener('click', async ()=>{
      const text = [
        'Documento de identidade (RG ou CNH)',
        'CPF',
        'Comprovante de renda (holerite ou declaração)',
        'Fiador ou caução (conforme contrato)',
        'Comprovante de residência'
      ].map((t,i)=> ${i+1}. ${t}).join('\n');
      try{ await navigator.clipboard.writeText(text); showToast('Checklist copiado 👍'); }
      catch{ showToast('Não foi possível copiar'); }
    });

    // Download model (gera arquivo simples em runtime)
    qs('#downloadModelo').addEventListener('click', ()=>{
      const blob = new Blob([
        '# Modelo de Cadastro\n\nNome:\nCPF:\nRenda Mensal:\nContato:\nObservações:\n'
      ], {type:'text/plain'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a'); a.href = url; a.download = 'modelo_cadastro.txt'; a.click();
      URL.revokeObjectURL(url);
    });

    // Upload via input
    const up = qs('#upDocs');
    up.addEventListener('change', ()=>{
      if(!up.files?.length) return; showToast(${up.files.length} arquivo(s) selecionado(s));
    });

    // Drag & Drop
    const drop = qs('#drop');
    ;['dragenter','dragover','dragleave','drop'].forEach(evt=>{
      drop.addEventListener(evt, e=>{ e.preventDefault(); e.stopPropagation(); });
    });
    ;['dragenter','dragover'].forEach(evt=>{
      drop.addEventListener(evt, ()=>{ drop.style.borderColor = '#7c5cff'; drop.style.background = '#0e1528'; });
    });
    ;['dragleave','drop'].forEach(evt=>{
      drop.addEventListener(evt, ()=>{ drop.style.borderColor = 'rgba(255,255,255,.25)'; drop.style.background = '#0d1421'; });
    });
    drop.addEventListener('drop', e=>{
      const files = e.dataTransfer?.files || []; showToast(${files.length} arquivo(s) solto(s));
      // Aqui você poderia enviar para sua API
      console.log('Dropped files:', files);
    });
  </script>
</body>
</html>
